# base
# ----
FROM node:20-bookworm-slim as base

RUN corepack enable

# Install optimization dependencies
RUN apt-get update && apt-get install -y \
  openssl \
  gzip \
  brotli \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /home/node/app

# Change ownership of the app directory before switching to the node user
RUN chown -R node:node /home/node/app

USER node

COPY --chown=node:node .yarnrc.yml .
COPY --chown=node:node package.json .
COPY --chown=node:node api/package.json api/
COPY --chown=node:node web/package.json web/
COPY --chown=node:node yarn.lock .
COPY --chown=node:node .yarn/releases/yarn-4.6.0.cjs .yarn/releases/yarn-4.6.0.cjs

RUN mkdir -p /home/node/.yarn/berry/index
RUN mkdir -p /home/node/.cache

# Ensure the node user has permissions for the .yarn and .cache directories
RUN chown -R node:node /home/node/.yarn /home/node/.cache

# Ensure the node user has permissions for the entire app directory
RUN chown -R node:node /home/node/app

RUN yarn install

COPY --chown=node:node redwood.toml .
COPY --chown=node:node graphql.config.js .
COPY --chown=node:node .env.defaults .env.defaults

# api build
# ---------
FROM base as api_build

# Performance optimization for Node.js
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=2048"

COPY --chown=node:node api api
RUN yarn rw build api

# web build
# ---------
FROM api_build as web_build

ARG SESSION_SECRET
ARG NREL_API_KEY
ARG GOOGLE_API_KEY

# Performance optimization for Node.js
ENV NODE_ENV=production
ENV NODE_OPTIONS="--max-old-space-size=2048"

COPY --chown=node:node web web

# Use prerendering for better performance
RUN yarn rw build web

# Optimize and compress static assets
RUN cd web/dist && \
    find . -type f -name "*.js" -exec gzip -9 -k {} \; && \
    find . -type f -name "*.css" -exec gzip -9 -k {} \; && \
    find . -type f -name "*.js" -exec brotli -9 -k {} \; && \
    find . -type f -name "*.css" -exec brotli -9 -k {} \;

# Create a _headers file with cache settings
RUN echo "/*\n  Cache-Control: public, max-age=3600\n\n/*.js\n  Cache-Control: public, max-age=604800, immutable\n\n/*.css\n  Cache-Control: public, max-age=604800, immutable\n\n/static/*\n  Cache-Control: public, max-age=31536000, immutable" > web/dist/_headers

# api serve
# ---------
FROM node:20-bookworm-slim as serve

RUN corepack enable

# Install production dependencies (keeping it minimal)
RUN apt-get update && apt-get install -y \
  openssl \
  && rm -rf /var/lib/apt/lists/*

WORKDIR /home/node/app

# Change ownership of the app directory before switching to the node user
RUN chown -R node:node /home/node/app

USER node

COPY --chown=node:node .yarnrc.yml .
COPY --chown=node:node package.json .
COPY --chown=node:node api/package.json api/
COPY --chown=node:node web/package.json web/
COPY --chown=node:node yarn.lock .
COPY --chown=node:node .yarn/releases/yarn-4.6.0.cjs .yarn/releases/yarn-4.6.0.cjs

RUN mkdir -p /home/node/.yarn/berry/index
RUN mkdir -p /home/node/.cache

# Ensure the node user has permissions for the .yarn and .cache directories
RUN chown -R node:node /home/node/.yarn /home/node/.cache

# Ensure the node user has permissions for the entire app directory
RUN chown -R node:node /home/node/app

# Only install production dependencies
RUN yarn workspaces focus --all --production

COPY --chown=node:node redwood.toml .
COPY --chown=node:node graphql.config.js .
COPY --chown=node:node .env.defaults .env.defaults

COPY --chown=node:node --from=api_build /home/node/app/api/dist /home/node/app/api/dist
COPY --chown=node:node --from=api_build /home/node/app/api/db /home/node/app/api/db
COPY --chown=node:node --from=api_build /home/node/app/node_modules/.prisma /home/node/app/node_modules/.prisma

COPY --chown=node:node --from=web_build /home/node/app/web/dist /home/node/app/web/dist

COPY --chown=node:node nginx/nginx.conf /etc/nginx/nginx.conf

# Performance optimization environment variables
ENV NODE_ENV=production \
    API_PROXY_TARGET=http://localhost:$API_PORT \
    NODE_OPTIONS="--max-old-space-size=1024"  \
    DATABASE_CONNECTION_POOL_MIN=2 \
    DATABASE_CONNECTION_POOL_MAX=10

# Enhanced server startup with performance flags
CMD [ "sh", "-c", "node --max-old-space-size=1024 node_modules/.bin/rw-server api & node --max-old-space-size=512 node_modules/.bin/rw-web-server --api-proxy-target $API_PROXY_TARGET" ]